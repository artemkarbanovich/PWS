//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------
// 
// Этот исходный код был создан с помощью wsdl, версия=4.8.3928.0.
//

namespace Lab4_WebForm.Server
{
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    [System.Web.Services.WebServiceAttribute(Namespace = "http://kak/")]
    [System.Web.Services.WebServiceBindingAttribute(Name = "SimplexSoap", Namespace = "http://kak/")]
    public abstract partial class Simplex : System.Web.Services.WebService
    {

        /// <remarks/>
        [System.Web.Services.WebMethodAttribute()]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://kak/AddMessageName", RequestElementName = "AddMessageName", RequestNamespace = "http://kak/", ResponseElementName = "AddMessageNameResponse", ResponseNamespace = "http://kak/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("AddMessageNameResult")]
        public abstract int Add(int x, int y);

        /// <remarks/>
        [System.Web.Services.WebMethodAttribute()]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://kak/AddSMessageName", RequestElementName = "AddSMessageName", RequestNamespace = "http://kak/", ResponseElementName = "AddSMessageNameResponse", ResponseNamespace = "http://kak/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("AddSMessageNameResult")]
        public abstract int AddS(int x, int y);

        /// <remarks/>
        [System.Web.Services.WebMethodAttribute()]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://kak/ConcatMessageName", RequestElementName = "ConcatMessageName", RequestNamespace = "http://kak/", ResponseElementName = "ConcatMessageNameResponse", ResponseNamespace = "http://kak/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("ConcatMessageNameResult")]
        public abstract string Concat(string s, double d);

        /// <remarks/>
        [System.Web.Services.WebMethodAttribute()]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://kak/SumMessageName", RequestElementName = "SumMessageName", RequestNamespace = "http://kak/", ResponseElementName = "SumMessageNameResponse", ResponseNamespace = "http://kak/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("SumMessageNameResult")]
        public abstract A Sum(A a1, A a2);
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://kak/")]
    public partial class A
    {

        private string sField;

        private int kField;

        private float fField;

        /// <remarks/>
        public string S
        {
            get
            {
                return this.sField;
            }
            set
            {
                this.sField = value;
            }
        }

        /// <remarks/>
        public int K
        {
            get
            {
                return this.kField;
            }
            set
            {
                this.kField = value;
            }
        }

        /// <remarks/>
        public float F
        {
            get
            {
                return this.fField;
            }
            set
            {
                this.fField = value;
            }
        }

        public static A operator +(A a1, A a2) => new A { S = $"{a1}{a2}", K = a1.K + a2.K, F = a1.F + a2.F };
    }
}