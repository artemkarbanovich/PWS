//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Lab4_WinForm.SimplexService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="A", Namespace="http://kak/")]
    [System.SerializableAttribute()]
    public partial class A : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SField;
        
        private int KField;
        
        private float FField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string S {
            get {
                return this.SField;
            }
            set {
                if ((object.ReferenceEquals(this.SField, value) != true)) {
                    this.SField = value;
                    this.RaisePropertyChanged("S");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=1)]
        public int K {
            get {
                return this.KField;
            }
            set {
                if ((this.KField.Equals(value) != true)) {
                    this.KField = value;
                    this.RaisePropertyChanged("K");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=2)]
        public float F {
            get {
                return this.FField;
            }
            set {
                if ((this.FField.Equals(value) != true)) {
                    this.FField = value;
                    this.RaisePropertyChanged("F");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://kak/", ConfigurationName="SimplexService.SimplexSoap")]
    public interface SimplexSoap {
        
        // CODEGEN: Контракт генерации сообщений с именем упаковщика (AddMessageName) сообщения AddMessageName не соответствует значению по умолчанию (Add).
        [System.ServiceModel.OperationContractAttribute(Action="http://kak/AddMessageName", ReplyAction="*")]
        Lab4_WinForm.SimplexService.AddMessageName1 Add(Lab4_WinForm.SimplexService.AddMessageName request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://kak/AddMessageName", ReplyAction="*")]
        System.Threading.Tasks.Task<Lab4_WinForm.SimplexService.AddMessageName1> AddAsync(Lab4_WinForm.SimplexService.AddMessageName request);
        
        // CODEGEN: Контракт генерации сообщений с именем упаковщика (ConcatMessageName) сообщения ConcatMessageName не соответствует значению по умолчанию (Concat).
        [System.ServiceModel.OperationContractAttribute(Action="http://kak/ConcatMessageName", ReplyAction="*")]
        Lab4_WinForm.SimplexService.ConcatMessageName1 Concat(Lab4_WinForm.SimplexService.ConcatMessageName request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://kak/ConcatMessageName", ReplyAction="*")]
        System.Threading.Tasks.Task<Lab4_WinForm.SimplexService.ConcatMessageName1> ConcatAsync(Lab4_WinForm.SimplexService.ConcatMessageName request);
        
        // CODEGEN: Контракт генерации сообщений с именем упаковщика (SumMessageName) сообщения SumMessageName не соответствует значению по умолчанию (Sum).
        [System.ServiceModel.OperationContractAttribute(Action="http://kak/SumMessageName", ReplyAction="*")]
        Lab4_WinForm.SimplexService.SumMessageName1 Sum(Lab4_WinForm.SimplexService.SumMessageName request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://kak/SumMessageName", ReplyAction="*")]
        System.Threading.Tasks.Task<Lab4_WinForm.SimplexService.SumMessageName1> SumAsync(Lab4_WinForm.SimplexService.SumMessageName request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AddMessageName", WrapperNamespace="http://kak/", IsWrapped=true)]
    public partial class AddMessageName {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://kak/", Order=0)]
        public int x;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://kak/", Order=1)]
        public int y;
        
        public AddMessageName() {
        }
        
        public AddMessageName(int x, int y) {
            this.x = x;
            this.y = y;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AddMessageNameResponse", WrapperNamespace="http://kak/", IsWrapped=true)]
    public partial class AddMessageName1 {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://kak/", Order=0)]
        public int AddMessageNameResult;
        
        public AddMessageName1() {
        }
        
        public AddMessageName1(int AddMessageNameResult) {
            this.AddMessageNameResult = AddMessageNameResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ConcatMessageName", WrapperNamespace="http://kak/", IsWrapped=true)]
    public partial class ConcatMessageName {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://kak/", Order=0)]
        public string s;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://kak/", Order=1)]
        public double d;
        
        public ConcatMessageName() {
        }
        
        public ConcatMessageName(string s, double d) {
            this.s = s;
            this.d = d;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ConcatMessageNameResponse", WrapperNamespace="http://kak/", IsWrapped=true)]
    public partial class ConcatMessageName1 {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://kak/", Order=0)]
        public string ConcatMessageNameResult;
        
        public ConcatMessageName1() {
        }
        
        public ConcatMessageName1(string ConcatMessageNameResult) {
            this.ConcatMessageNameResult = ConcatMessageNameResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SumMessageName", WrapperNamespace="http://kak/", IsWrapped=true)]
    public partial class SumMessageName {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://kak/", Order=0)]
        public Lab4_WinForm.SimplexService.A a1;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://kak/", Order=1)]
        public Lab4_WinForm.SimplexService.A a2;
        
        public SumMessageName() {
        }
        
        public SumMessageName(Lab4_WinForm.SimplexService.A a1, Lab4_WinForm.SimplexService.A a2) {
            this.a1 = a1;
            this.a2 = a2;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SumMessageNameResponse", WrapperNamespace="http://kak/", IsWrapped=true)]
    public partial class SumMessageName1 {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://kak/", Order=0)]
        public Lab4_WinForm.SimplexService.A SumMessageNameResult;
        
        public SumMessageName1() {
        }
        
        public SumMessageName1(Lab4_WinForm.SimplexService.A SumMessageNameResult) {
            this.SumMessageNameResult = SumMessageNameResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface SimplexSoapChannel : Lab4_WinForm.SimplexService.SimplexSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SimplexSoapClient : System.ServiceModel.ClientBase<Lab4_WinForm.SimplexService.SimplexSoap>, Lab4_WinForm.SimplexService.SimplexSoap {
        
        public SimplexSoapClient() {
        }
        
        public SimplexSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SimplexSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SimplexSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SimplexSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Lab4_WinForm.SimplexService.AddMessageName1 Lab4_WinForm.SimplexService.SimplexSoap.Add(Lab4_WinForm.SimplexService.AddMessageName request) {
            return base.Channel.Add(request);
        }
        
        public int Add(int x, int y) {
            Lab4_WinForm.SimplexService.AddMessageName inValue = new Lab4_WinForm.SimplexService.AddMessageName();
            inValue.x = x;
            inValue.y = y;
            Lab4_WinForm.SimplexService.AddMessageName1 retVal = ((Lab4_WinForm.SimplexService.SimplexSoap)(this)).Add(inValue);
            return retVal.AddMessageNameResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Lab4_WinForm.SimplexService.AddMessageName1> Lab4_WinForm.SimplexService.SimplexSoap.AddAsync(Lab4_WinForm.SimplexService.AddMessageName request) {
            return base.Channel.AddAsync(request);
        }
        
        public System.Threading.Tasks.Task<Lab4_WinForm.SimplexService.AddMessageName1> AddAsync(int x, int y) {
            Lab4_WinForm.SimplexService.AddMessageName inValue = new Lab4_WinForm.SimplexService.AddMessageName();
            inValue.x = x;
            inValue.y = y;
            return ((Lab4_WinForm.SimplexService.SimplexSoap)(this)).AddAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Lab4_WinForm.SimplexService.ConcatMessageName1 Lab4_WinForm.SimplexService.SimplexSoap.Concat(Lab4_WinForm.SimplexService.ConcatMessageName request) {
            return base.Channel.Concat(request);
        }
        
        public string Concat(string s, double d) {
            Lab4_WinForm.SimplexService.ConcatMessageName inValue = new Lab4_WinForm.SimplexService.ConcatMessageName();
            inValue.s = s;
            inValue.d = d;
            Lab4_WinForm.SimplexService.ConcatMessageName1 retVal = ((Lab4_WinForm.SimplexService.SimplexSoap)(this)).Concat(inValue);
            return retVal.ConcatMessageNameResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Lab4_WinForm.SimplexService.ConcatMessageName1> Lab4_WinForm.SimplexService.SimplexSoap.ConcatAsync(Lab4_WinForm.SimplexService.ConcatMessageName request) {
            return base.Channel.ConcatAsync(request);
        }
        
        public System.Threading.Tasks.Task<Lab4_WinForm.SimplexService.ConcatMessageName1> ConcatAsync(string s, double d) {
            Lab4_WinForm.SimplexService.ConcatMessageName inValue = new Lab4_WinForm.SimplexService.ConcatMessageName();
            inValue.s = s;
            inValue.d = d;
            return ((Lab4_WinForm.SimplexService.SimplexSoap)(this)).ConcatAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Lab4_WinForm.SimplexService.SumMessageName1 Lab4_WinForm.SimplexService.SimplexSoap.Sum(Lab4_WinForm.SimplexService.SumMessageName request) {
            return base.Channel.Sum(request);
        }
        
        public Lab4_WinForm.SimplexService.A Sum(Lab4_WinForm.SimplexService.A a1, Lab4_WinForm.SimplexService.A a2) {
            Lab4_WinForm.SimplexService.SumMessageName inValue = new Lab4_WinForm.SimplexService.SumMessageName();
            inValue.a1 = a1;
            inValue.a2 = a2;
            Lab4_WinForm.SimplexService.SumMessageName1 retVal = ((Lab4_WinForm.SimplexService.SimplexSoap)(this)).Sum(inValue);
            return retVal.SumMessageNameResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Lab4_WinForm.SimplexService.SumMessageName1> Lab4_WinForm.SimplexService.SimplexSoap.SumAsync(Lab4_WinForm.SimplexService.SumMessageName request) {
            return base.Channel.SumAsync(request);
        }
        
        public System.Threading.Tasks.Task<Lab4_WinForm.SimplexService.SumMessageName1> SumAsync(Lab4_WinForm.SimplexService.A a1, Lab4_WinForm.SimplexService.A a2) {
            Lab4_WinForm.SimplexService.SumMessageName inValue = new Lab4_WinForm.SimplexService.SumMessageName();
            inValue.a1 = a1;
            inValue.a2 = a2;
            return ((Lab4_WinForm.SimplexService.SimplexSoap)(this)).SumAsync(inValue);
        }
    }
}
